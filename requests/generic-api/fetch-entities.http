# curl -H "Content-type: application/x-www-form-urlencoded" -H "Authorization: Basic Y2xpZW50OnNlY3JldA==" -d "grant_type=password&username=admin&password=admin" http://localhost:8080/app/rest/v2/oauth/token

####################################################################################################
##
## CUBA Platform Generic REST API
##
####################################################################################################


## Execute 'authenticate.http' first to get have a valid access token for the API

## Get all Visit entities

GET {{baseUrl}}/{{genericApi}}/entities/petclinic_Visit
Authorization: Bearer {{auth_token}}

> {%

    client.test("Response Code is 200", function() {
      client.assert(
          response.status === 200,
          "Response status is not 200 - OK"
      );
    });

    client.test("Visit List can be retrieved", function() {
      client.assert(
          response.body.length > 0,
          "Visit List does not contain multiple items"
      );
      client.assert(
          response.body[0]["_entityName"] === "petclinic_Visit",
          "Visit List does not contain multiple items"
      );
      client.assert(
          response.body[0]["id"],
          "ID Attribute of a Visit is not returned"
      );
    });
  %}

###


## Search for Pet by Name

POST {{baseUrl}}/{{genericApi}}/entities/petclinic_Pet/search
Authorization: Bearer {{auth_token}}

{
  "filter": {
    "conditions": [
      {
        "property": "name",
        "operator": "=",
        "value": "Pikachu"
      }
    ]
  },
  "view": "pet-with-owner-and-type"
}

> {%

    client.test("Response Code is 200", function() {
      client.assert(
          response.status === 200,
          "Response status is not 200 - OK"
      );
    });

    client.test("Pet List can be retrieved", function() {
      client.assert(
          response.body[0]["name"] === "Pikachu",
          "name Attribute of a Pet is not returned"
      );

    });

  %}
